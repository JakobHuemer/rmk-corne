# This flake was initially generated by fh, the CLI for FlakeHub (version 0.1.24)
{
  # A helpful description of your flake
  description = "RMK corne 5 col dev shell";

  # Flake inputs
  inputs = {
    flake-schemas.url = "https://flakehub.com/f/DeterminateSystems/flake-schemas/*";

    nixpkgs.url = "https://flakehub.com/f/NixOS/nixpkgs/*";

    rust-overlay = {
      url = "https://flakehub.com/f/oxalica/rust-overlay/0.1.*";
      inputs.nixpkgs.follows = "nixpkgs";
    };
  };

  # Flake outputs that other flakes can use
  outputs =
    {
      self,
      flake-schemas,
      nixpkgs,
      rust-overlay,
    }:
    let
      # Nixpkgs overlays
      overlays = [
        rust-overlay.overlays.default
        (final: prev: {
          rustToolchain = (final.rust-bin.fromRustupToolchainFile ./rust-toolchain.toml).override {
            extensions = [ "rust-src" "llvm-tools-preview" ];
            targets = [ "thumbv7em-none-eabihf" ];
          };
        })
      ];

      # Helpers for producing system-specific outputs
      supportedSystems = [
        "x86_64-linux"
        "aarch64-darwin"
        "x86_64-darwin"
        "aarch64-linux"
      ];
      forEachSupportedSystem =
        f:
        nixpkgs.lib.genAttrs supportedSystems (
          system:
          f {
            pkgs = import nixpkgs { inherit overlays system; };
          }
        );
    in
    {
      # Schemas tell Nix about the structure of your flake's outputs
      schemas = flake-schemas.schemas;

      # Development environments
      devShells = forEachSupportedSystem (
        { pkgs }:
        {
          default = pkgs.mkShell {
            # Pinned packages available in the environment
            packages = with pkgs; [
              rustToolchain
              cargo-edit
              cargo-outdated
              cargo-udeps
              cargo-watch
              rust-analyzer
              curl
              git
              nixpkgs-fmt
              llvmPackages.libclang.lib
              flip-link
              rustup
              probe-rs-tools

              cargo-make

              # ðŸ”½ Native dependencies for rmkit
              sdl2-compat
              sdl3
              fontconfig
              freetype
              libxkbcommon
              pkg-config
            ];

            # Environment variables
            env = {
              RUST_BACKTRACE = "1";
              RUST_SRC_PATH = "${pkgs.rustToolchain}/lib/rustlib/src/rust/library";
              LIBCLANG_PATH = "${pkgs.llvmPackages.libclang.lib}/lib";
            };

            # A hook run every time you enter the environment
            shellHook = ''
              exec "${pkgs.zsh}/bin/zsh"
            '';
          };
        }
      );
    };
}
